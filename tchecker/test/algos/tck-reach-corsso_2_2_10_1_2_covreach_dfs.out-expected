// COVERED_STATES 11
// REACHABLE true
// RUNNING_TIME_SECONDS  xxxx
// STORED_STATES 64
// VISITED_STATES 36
digraph CorSSO_2_2_10_1_2 {
  0 [intval="a1=0,p1=0,a2=0,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & x1-y2<=0 & 0<=y1-x2 & x2-y2<=0)"]
  1 [intval="a1=0,p1=0,a2=0,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & 0<=y1-x2 & x2-y2<=0)"]
  2 [intval="a1=0,p1=0,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & 0<=y1-x2 & x2-y2<=0)"]
  3 [intval="a1=0,p1=0,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 2<y1 & 0<=x2 & 2<y2 & x1-y1<=0 & 2<y1-x2 & x2-y2<-2)"]
  4 [intval="a1=0,p1=0,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<=0 & 4<y1-x2 & x2-y2<-4)"]
  5 [intval="a1=0,p1=0,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<=0 & 4<y1-x2 & x2-y2<-4)"]
  6 [intval="a1=0,p1=1,a2=0,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & x1-y2<=0 & x2-y2<=0)"]
  7 [intval="a1=0,p1=1,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & x1-y2<=0 & x2-y2<=0)"]
  8 [intval="a1=0,p1=1,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 2<y2 & x1-y1<=0 & x1-y2<-2 & x2-y2<-2)"]
  9 [intval="a1=0,p1=1,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 4<y2 & x1-y1<=0 & x1-y2<-4 & x2-y2<-4)"]
  10 [intval="a1=0,p1=1,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 4<y2 & x1-y1<=0 & x1-y2<-4 & x2-y2<-4)"]
  11 [intval="a1=0,p1=2,a2=0,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & x1-y2<=0 & x2-y2<=0)"]
  12 [intval="a1=0,p1=2,a2=0,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & 0<=y1-x2 & x2-y2<=0)"]
  13 [intval="a1=0,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & x1-y2<=0 & x2-y2<=0)"]
  14 [intval="a1=0,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 0<=y2 & x1-y1<=0 & 0<=y1-x2 & x2-y2<=0)"]
  15 [intval="a1=0,p1=2,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 2<y1 & 0<=x2 & 2<y2 & x1-y1<=0 & 2<y1-x2 & x2-y2<-2)"]
  16 [intval="a1=0,p1=2,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 2<y2 & x1-y1<=0 & x1-y2<-2 & x2-y2<-2)"]
  17 [intval="a1=0,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<=0 & 4<y1-x2 & x2-y2<-4)"]
  18 [intval="a1=0,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 4<y2 & x1-y1<=0 & x1-y2<-4 & x2-y2<-4)"]
  19 [intval="a1=0,p1=2,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<=0 & 4<y1-x2 & x2-y2<-4)"]
  20 [intval="a1=0,p1=2,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 4<y2 & x1-y1<=0 & x1-y2<-4 & x2-y2<-4)"]
  21 [intval="a1=1,p1=2,a2=0,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 0<=y2 & x1-y1<-4 & 4<y1-x2 & x2-y2<=0)"]
  22 [intval="a1=1,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 0<=y2 & x1-y1<-4 & 4<y1-x2 & x2-y2<=0)"]
  23 [intval="a1=1,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 2<y1 & 0<=x2 & 0<=y2 & x1-y1<-2 & x1-y2<=0 & 0<=y1-x2 & x2-y2<=0)"]
  24 [intval="a1=1,p1=2,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 6<y1 & 0<=x2 & 2<y2 & x1-y1<-4 & 6<y1-x2 & x2-y2<-2)"]
  25 [intval="a1=1,p1=2,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 2<y1 & 0<=x2 & 2<y2 & x1-y1<-2 & x1-y2<-2 & 2<y1-x2 & x2-y2<-2)"]
  26 [intval="a1=1,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-4 & 8<y1-x2 & x2-y2<-4)"]
  27 [intval="a1=1,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<-4 & x1-y2<-4 & 4<y1-x2 & x2-y2<-4)"]
  28 [intval="a1=1,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 2<y1 & 0<=x2 & 6<y2 & x1-y1<-2 & x1-y2<-6 & x2-y2<-4)"]
  29 [intval="a1=1,p1=2,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-4 & 8<y1-x2 & x2-y2<-4)"]
  30 [intval="a1=1,p1=2,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<-4 & x1-y2<-4 & 4<y1-x2 & x2-y2<-4)"]
  31 [intval="a1=2,p1=0,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 0<=y2 & x1-y1<-8 & x1-y2<2 & 8<y1-x2 & x2-y2<=0)"]
  32 [intval="a1=2,p1=0,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 2<y2 & x1-y1<-8 & x1-y2<2 & 10<y1-x2 & x2-y2<-2)"]
  33 [intval="a1=2,p1=0,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & x1-y2<2 & x2-y2<-4)"]
  34 [intval="a1=2,p1=2,a2=0,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 0<=y2 & 10<y1-x2 & x2-y2<=0)"]
  35 [intval="a1=2,p1=2,a2=0,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 0<=y2 & x1-y1<-8 & 8<y1-x2 & x2-y2<=0)"]
  36 [intval="a1=2,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 0<=y2 & 10<y1-x2 & x2-y2<=0)"]
  37 [intval="a1=2,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 0<=y2 & x1-y1<-8 & 8<y1-x2 & x2-y2<=0)"]
  38 [intval="a1=2,p1=2,a2=0,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 6<y1 & 0<=x2 & 0<=y2 & x1-y1<-6 & x1-y2<=0 & 4<y1-x2 & x2-y2<=0)"]
  39 [intval="a1=2,p1=2,a2=1,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 2<y2 & 2<y1-x2 & x2-y2<-2)"]
  40 [intval="a1=2,p1=2,a2=1,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 2<y2 & x2-y2<-2)"]
  41 [intval="a1=2,p1=2,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 2<y2 & x2-y2<-2)"]
  42 [intval="a1=2,p1=2,a2=1,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 6<y1 & 0<=x2 & 2<y2 & x1-y1<-6 & x1-y2<-2 & 6<y1-x2 & x2-y2<-2)"]
  43 [intval="a1=2,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & 4<y1-x2 & x2-y2<-4)"]
  44 [intval="a1=2,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-8 & x1-y2<-4 & 8<y1-x2 & x2-y2<-4)"]
  45 [intval="a1=2,p1=2,a2=2,p2=0", vloc="<auth,auth>", zone="(0<=x1 & 6<y1 & 0<=x2 & 6<y2 & x1-y1<-6 & x1-y2<-6 & 4<y1-x2 & x2-y2<-4)"]
  46 [intval="a1=2,p1=2,a2=2,p2=1", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & 10<y1-x2 & x2-y2<-4)"]
  47 [intval="a1=2,p1=2,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & x2-y2<-4)"]
  48 [intval="a1=2,p1=2,a2=2,p2=2", vloc="<auth,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-8 & x1-y2<-4 & 8<y1-x2 & x2-y2<-4)"]
  49 [intval="a1=0,p1=0,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<=0 & 4<y1-x2 & x2-y2<-4)"]
  50 [intval="a1=0,p1=1,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 4<y2 & x1-y1<=0 & x1-y2<-4 & x2-y2<-4)"]
  51 [intval="a1=0,p1=2,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<=0 & 4<y1-x2 & x2-y2<-4)"]
  52 [intval="a1=0,p1=2,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 0<=y1 & 0<=x2 & 4<y2 & x1-y1<=0 & x1-y2<-4 & x2-y2<-4)"]
  53 [intval="a1=1,p1=2,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-4 & 8<y1-x2 & x2-y2<-4)"]
  54 [intval="a1=1,p1=2,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 4<y1 & 0<=x2 & 4<y2 & x1-y1<-4 & x1-y2<-4 & 4<y1-x2 & x2-y2<-4)"]
  55 [intval="a1=2,p1=2,a2=1,p2=1", vloc="<auth,access>", zone="(0<=x1 & 10<y1 & 0<=x2 & 2<y2 & 2<y1-x2 & x2-y2<-2)"]
  56 [intval="a1=2,p1=2,a2=2,p2=1", vloc="<auth,access>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & 10<y1-x2 & x2-y2<-4)"]
  57 [intval="a1=2,p1=2,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & 4<y1-x2 & x2-y2<-4)"]
  58 [intval="a1=2,p1=2,a2=2,p2=2", vloc="<auth,access>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-8 & x1-y2<-4 & 8<y1-x2 & x2-y2<-4)"]
  59 [intval="a1=2,p1=2,a2=0,p2=2", vloc="<access,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 0<=y2 & x1-y1<-8 & x1-y2<2 & 8<y1-x2 & x2-y2<=0)"]
  60 [intval="a1=2,p1=2,a2=1,p2=2", vloc="<access,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 2<y2 & x1-y1<-8 & x1-y2<2 & 10<y1-x2 & x2-y2<-2)"]
  61 [intval="a1=2,p1=2,a2=2,p2=0", vloc="<access,auth>", zone="(0<=x1 & 8<y1 & 0<=x2 & 4<y2 & x1-y1<-8 & x1-y2<-4 & 8<y1-x2 & x2-y2<-4)"]
  62 [intval="a1=2,p1=2,a2=2,p2=2", vloc="<access,auth>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & x1-y2<2 & x2-y2<-4)"]
  63 [intval="a1=2,p1=2,a2=2,p2=2", vloc="<access,access>", zone="(0<=x1 & 10<y1 & 0<=x2 & 4<y2 & x1-y1<2 & x1-y2<2 & 4<y1-x2 & x2-y2<-4)"]
  0 -> 1 [edge_type="actual", vedge="<P2@tau>"]
  0 -> 2 [edge_type="actual", vedge="<P2@tau>"]
  0 -> 6 [edge_type="actual", vedge="<P1@tau>"]
  0 -> 11 [edge_type="actual", vedge="<P1@tau>"]
  2 -> 3 [edge_type="actual", vedge="<P2@tau>"]
  2 -> 7 [edge_type="actual", vedge="<P1@tau>"]
  2 -> 13 [edge_type="actual", vedge="<P1@tau>"]
  3 -> 5 [edge_type="actual", vedge="<P2@tau>"]
  3 -> 8 [edge_type="actual", vedge="<P1@tau>"]
  3 -> 16 [edge_type="actual", vedge="<P1@tau>"]
  4 -> 1 [edge_type="subsumption", vedge="<P2@tau>"]
  4 -> 2 [edge_type="subsumption", vedge="<P2@tau>"]
  4 -> 9 [edge_type="actual", vedge="<P1@tau>"]
  4 -> 18 [edge_type="actual", vedge="<P1@tau>"]
  5 -> 10 [edge_type="actual", vedge="<P1@tau>"]
  5 -> 20 [edge_type="actual", vedge="<P1@tau>"]
  5 -> 49 [edge_type="actual", vedge="<P2@tau>"]
  14 -> 15 [edge_type="actual", vedge="<P2@tau>"]
  14 -> 23 [edge_type="actual", vedge="<P1@tau>"]
  15 -> 19 [edge_type="actual", vedge="<P2@tau>"]
  15 -> 25 [edge_type="actual", vedge="<P1@tau>"]
  17 -> 12 [edge_type="subsumption", vedge="<P2@tau>"]
  17 -> 14 [edge_type="subsumption", vedge="<P2@tau>"]
  17 -> 27 [edge_type="actual", vedge="<P1@tau>"]
  18 -> 12 [edge_type="actual", vedge="<P2@tau>"]
  18 -> 14 [edge_type="actual", vedge="<P2@tau>"]
  18 -> 28 [edge_type="actual", vedge="<P1@tau>"]
  19 -> 30 [edge_type="actual", vedge="<P1@tau>"]
  19 -> 51 [edge_type="actual", vedge="<P2@tau>"]
  22 -> 24 [edge_type="actual", vedge="<P2@tau>"]
  22 -> 38 [edge_type="actual", vedge="<P1@tau>"]
  24 -> 29 [edge_type="actual", vedge="<P2@tau>"]
  24 -> 42 [edge_type="actual", vedge="<P1@tau>"]
  26 -> 21 [edge_type="subsumption", vedge="<P2@tau>"]
  26 -> 22 [edge_type="subsumption", vedge="<P2@tau>"]
  26 -> 44 [edge_type="actual", vedge="<P1@tau>"]
  27 -> 21 [edge_type="actual", vedge="<P2@tau>"]
  27 -> 22 [edge_type="actual", vedge="<P2@tau>"]
  27 -> 45 [edge_type="actual", vedge="<P1@tau>"]
  29 -> 48 [edge_type="actual", vedge="<P1@tau>"]
  29 -> 53 [edge_type="actual", vedge="<P2@tau>"]
  34 -> 40 [edge_type="actual", vedge="<P2@tau>"]
  36 -> 41 [edge_type="actual", vedge="<P2@tau>"]
  37 -> 41 [edge_type="subsumption", vedge="<P2@tau>"]
  37 -> 59 [edge_type="actual", vedge="<P1@tau>"]
  39 -> 34 [edge_type="subsumption", vedge="<P2@tau>"]
  39 -> 36 [edge_type="subsumption", vedge="<P2@tau>"]
  40 -> 46 [edge_type="actual", vedge="<P2@tau>"]
  40 -> 55 [edge_type="actual", vedge="<P2@tau>"]
  41 -> 47 [edge_type="subsumption", vedge="<P2@tau>"]
  43 -> 34 [edge_type="actual", vedge="<P2@tau>"]
  43 -> 36 [edge_type="actual", vedge="<P2@tau>"]
  44 -> 35 [edge_type="actual", vedge="<P2@tau>"]
  44 -> 37 [edge_type="actual", vedge="<P2@tau>"]
  44 -> 61 [edge_type="actual", vedge="<P1@tau>"]
  46 -> 56 [edge_type="actual", vedge="<P2@tau>"]
  47 -> 57 [edge_type="actual", vedge="<P2@tau>"]
  49 -> 4 [edge_type="actual", vedge="<P2@tau>"]
  49 -> 50 [edge_type="actual", vedge="<P1@tau>"]
  49 -> 52 [edge_type="actual", vedge="<P1@tau>"]
  51 -> 17 [edge_type="actual", vedge="<P2@tau>"]
  51 -> 54 [edge_type="actual", vedge="<P1@tau>"]
  53 -> 26 [edge_type="actual", vedge="<P2@tau>"]
  53 -> 58 [edge_type="actual", vedge="<P1@tau>"]
  55 -> 39 [edge_type="actual", vedge="<P2@tau>"]
  56 -> 43 [edge_type="subsumption", vedge="<P2@tau>"]
  57 -> 43 [edge_type="actual", vedge="<P2@tau>"]
  59 -> 31 [edge_type="actual", vedge="<P1@tau>"]
  59 -> 60 [edge_type="actual", vedge="<P2@tau>"]
  60 -> 32 [edge_type="actual", vedge="<P1@tau>"]
  60 -> 62 [edge_type="actual", vedge="<P2@tau>"]
  62 -> 33 [edge_type="actual", vedge="<P1@tau>"]
  62 -> 63 [edge_type="actual", vedge="<P2@tau>"]
}
