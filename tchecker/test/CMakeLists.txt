# This file is a part of the TChecker project.
#
# See files AUTHORS and LICENSE for copyright details.

include(${CMAKE_CURRENT_SOURCE_DIR}/TestUtils.cmake)

# Use currently compiled TChecker instead of installed one
set(TCK_REACH "$<TARGET_FILE:tck-reach>")
set(TCK_REACH_SH "${CMAKE_CURRENT_SOURCE_DIR}/tck-reach.sh")

# Sub-directories to recurse into
set(SUBDIRS unit-tests bugfixes simple-nr algos)

# Common script that redirects and checks outputs and errors generated by
# TChecker.
set(TEST_DRIVER "${CMAKE_CURRENT_SOURCE_DIR}/test-driver.sh")

# Script that copy generated output or errors into source directories as
# future expected results.
set(SAVE_RESULTS "${CMAKE_CURRENT_SOURCE_DIR}/save-results.sh")

# Direcotry containing examples and their generators
set(TCK_EXAMPLES_DIR "${CMAKE_SOURCE_DIR}/examples")

#
# Common setup for all compiled tests
#
find_package(Boost REQUIRED)
find_package(Catch2 QUIET)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

if (${CMAKE_HOST_SYSTEM_NAME} MATCHES "Linux")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
endif ()

tck_check_cxx_flags("-ferror-limit=150" ERROR_LIMIT)
tck_check_cxx_flags("-fstrict-vtable-pointers" STRICT_VTABLE_POINTERS)
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g ${ERROR_LIMIT}")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DNDEBUG -O2 -flto ${STRICT_VTABLE_POINTERS}")

get_target_property(TCHECKER_INCLUDE_DIR libtchecker_static INCLUDE_DIRECTORIES)

set(TCHECKER_TEST_DIR ${CMAKE_CURRENT_SOURCE_DIR})

include_directories(${TCHECKER_INCLUDE_DIR})
include_directories(${TCHECKER_TEST_DIR})

#
# Library gathering common routines for compiled tests
#
add_subdirectory(testutils)

get_target_property(TESTUTILS_DIR testutils SOURCE_DIR)
include_directories(${TESTUTILS_DIR})

#
# Add a "fake" test to build TChecker tck_reach as a pre-requisite of test suites
#
build_command(BUILD_TCK_REACH_COMMAND CONFIGURATION "$<CONFIG>" TARGET tck-reach)
add_test(NAME build-tck-reach
         COMMAND ${CMAKE_COMMAND}
         --build "${CMAKE_BINARY_DIR}"
         --config "$<CONFIG>"
         --target tck-reach
         )
set_tests_properties(build-tck-reach PROPERTIES FIXTURES_SETUP BUILD_TCK_REACH)

set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES "Testing")

set(save_commands "")
foreach(dir ${SUBDIRS})
    add_subdirectory(${dir})
    if(TARGET save-${dir})
        list(APPEND save_commands
             COMMAND ${CMAKE_COMMAND} --build ${CMAKE_CURRENT_BINARY_DIR}/${dir} --target save-${dir} --config "$<CONFIG>")
    endif()
    set_property(DIRECTORY ${dir}
                 APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES "Testing")
endforeach()

add_custom_target(save ${save_commands} COMMENT "Recursive 'save' target")
