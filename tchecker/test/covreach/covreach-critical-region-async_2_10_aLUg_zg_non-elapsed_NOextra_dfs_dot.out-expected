REACHABLE true
STORED_NODES 25
VISITED_NODES 12
COVERED_LEAF_NODES 1
COVERED_NONLEAF_NODES 0

digraph critical_region_async_2_10 {
node [shape="box",style="rounded"];
n1 [label="<l,I,req,req,not_ready,not_ready> id=0 (10<=x1<=30 & x2=0 & 10<=x1-x2<=30)"]
n2 [label="<l,I,req,req,not_ready,not_ready> id=0 (x1=0 & x2=0 & x1=x2)"]
n2 -> n3 [color=black]
n2 -> n6 [color=black]
n2 -> n10 [color=black]
n3 [label="<l,I,req,req,not_ready,testing> id=0 (0<=x1<=20 & x2=0 & 0<=x1-x2<=20)"]
n3 -> n1 [color=black]
n3 -> n5 [color=black]
n3 -> n7 [color=black]
n3 -> n11 [color=black]
n4 [label="<l,I,req,req,not_ready,requesting> id=0 (x1=0 & 10<=x2<=30 & -30<=x1-x2<=-10)"]
n5 [label="<l,I,req,req,not_ready,requesting> id=0 (0<=x1<=29 & 0<=x2<=9 & 0<=x1-x2<=20)"]
n5 -> n8 [color=black]
n5 -> n12 [color=black]
n6 [label="<l,I,req,req,testing,not_ready> id=0 (x1=0 & 0<=x2<=20 & -20<=x1-x2<=0)"]
n7 [label="<l,I,req,req,testing,testing> id=0 (x1=0 & 0<=x2<=10 & -10<=x1-x2<=0)"]
n8 [label="<l,I,req,req,testing,requesting> id=0 (x1=0 & 0<=x2<=20 & -20<=x1-x2<=0)"]
n8 -> n4 [color=black]
n8 -> n9 [color=black]
n8 -> n13 [color=black]
n9 [label="<l,I,req,req,requesting,requesting> id=0 (0<=x1<=9 & 0<=x2<=29 & -20<=x1-x2<=0)"]
n9 -> n14 [color=black]
n10 [label="<l,C,req,req,not_ready,not_ready> id=1 (0<=x1 & 0<=x2 & x1=x2)"]
n11 [label="<l,C,req,req,not_ready,testing> id=1 (0<=x1<=30 & 0<=x2<=10 & 0<=x1-x2<=20)"]
n12 [label="<l,C,req,req,not_ready,requesting> id=1 (0<=x1 & 0<=x2 & 0<=x1-x2<=20)"]
n13 [label="<l,C,req,req,testing,requesting> id=1 (0<=x1<=10 & 0<=x2<=30 & -20<=x1-x2<=0)"]
n14 [label="<l,C,req,req,requesting,requesting> id=1 (0<=x1 & 0<=x2 & -20<=x1-x2<=0)"]
n14 -> n15 [color=black]
n14 -> n17 [color=black]
n15 [label="<l,C,req,req,requesting,requesting> id=2 (0<=x1 & 0<=x2 & -20<=x1-x2<=0)"]
n16 [label="<l,C,req,req,testing2,requesting> id=1 (x1=0 & 0<=x2 & x1-x2<=0)"]
n17 [label="<l,C,ack,req,critical,requesting> id=0 (x1=0 & 0<=x2 & x1-x2<=0)"]
n17 -> n16 [color=black]
n17 -> n18 [color=black]
n17 -> n19 [color=black]
n18 [label="<l,C,ack,req,critical,requesting> id=1 (0<=x1<=20 & 0<=x2 & x1-x2<=0)"]
n19 [label="<l,C,ack,req,error,requesting> id=0 (x1=20 & 20<=x2 & x1-x2<=0)"]
n19 -> n20 [color=black]
n20 [label="<l,C,ack,req,error,requesting> id=1 (20<=x1 & 20<=x2 & x1-x2<=0)"]
n20 -> n21 [color=black]
n21 [label="<l,C,ack,req,error,requesting> id=2 (20<=x1 & 20<=x2 & x1-x2<=0)"]
n21 -> n20 [color=blue]
n21 -> n23 [color=black]
n22 [label="<l,C,ack,req,error,testing2> id=2 (20<=x1 & x2=0 & 20<=x1-x2)"]
n23 [label="<l,C,ack,ack,error,critical> id=0 (20<=x1 & x2=0 & 20<=x1-x2)"]
n23 -> n22 [color=black]
n23 -> n24 [color=black]
n23 -> n25 [color=black]
n24 [label="<l,C,ack,ack,error,critical> id=1 (20<=x1 & 0<=x2<=20 & 20<=x1-x2)"]
n25 [label="<l,C,ack,ack,error,error> id=0 (40<=x1 & x2=20 & 20<=x1-x2)"]
}
